import { type AudioBuffer, stt } from '@livekit/agents';
import type { STTLanguages, STTModels } from './models.js';
export interface STTOptions {
    apiKey?: string;
    language?: STTLanguages | string;
    detectLanguage: boolean;
    interimResults: boolean;
    punctuate: boolean;
    model: STTModels;
    smartFormat: boolean;
    noDelay: boolean;
    endpointing: number;
    fillerWords: boolean;
    sampleRate: number;
    numChannels: number;
    keywords: [string, number][];
    profanityFilter: boolean;
}
export declare class STT extends stt.STT {
    #private;
    label: string;
    constructor(opts?: Partial<STTOptions>);
    _recognize(_: AudioBuffer): Promise<stt.SpeechEvent>;
    stream(): stt.SpeechStream;
}
export declare class SpeechStream extends stt.SpeechStream {
    #private;
    label: string;
    constructor(stt: STT, opts: STTOptions);
}
//# sourceMappingURL=stt.d.ts.map